{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pwebb\\\\Desktop\\\\StudyApp\\\\study-app\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { Card, Deck } from '../components';\nimport { Link } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet flashCardDeck = Card(\"\", \"\", null, null);\nfunction addCard(x, y) {\n  if (flashCardDeck.previousCard == null) {\n    flashCardDeck.question = x;\n    flashCardDeck.answer = y;\n  } else {\n    let flashCardDeckCopy = flashCardDeck;\n    flashCardDeck = Card(x, y, null, flashCardDeckCopy);\n    flashCardDeckCopy.nextCard = flashCardDeck;\n    flashCardDeck.previousCard = flashCardDeckCopy;\n  }\n}\nexport default function Home() {\n  _s();\n  const [question, setQuestion] = useState(\" \");\n  const [answer, setAnswer] = useState(\" \");\n  const updateQuestion = event => {\n    setQuestion(event.target.value);\n  };\n  const updateAnswer = event => {\n    setAnswer(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: updateQuestion,\n        placeholder: \"Enter Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: updateAnswer,\n        placeholder: \"Enter Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addCard(question, answer),\n      children: \" Click to add card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: flashCardDeck.answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Home, \"tMb+2l8TO8a8l4nxDtvB69K+2/g=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Card","Deck","Link","React","useState","flashCardDeck","addCard","x","y","previousCard","question","answer","flashCardDeckCopy","nextCard","Home","setQuestion","setAnswer","updateQuestion","event","target","value","updateAnswer"],"sources":["C:/Users/pwebb/Desktop/StudyApp/study-app/src/pages/Home.js"],"sourcesContent":["import { Card, Deck} from '../components'\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState } from 'react';\r\n\r\nlet flashCardDeck = Card(\"\",\"\",null,null);\r\n\r\nfunction addCard(x,y){\r\n  if(flashCardDeck.previousCard == null){\r\n    flashCardDeck.question = x;\r\n    flashCardDeck.answer = y;\r\n  }\r\n  else{\r\n    let flashCardDeckCopy = flashCardDeck;\r\n    flashCardDeck = Card(x,y,null,flashCardDeckCopy);\r\n    flashCardDeckCopy.nextCard = flashCardDeck;\r\n    flashCardDeck.previousCard = flashCardDeckCopy;\r\n  }\r\n}\r\n\r\n\r\nexport default function Home() {\r\n    const [question, setQuestion] = useState(\" \");\r\n    const [answer, setAnswer] = useState(\" \");\r\n  \r\n    const updateQuestion = event => {\r\n      setQuestion(event.target.value);\r\n    };\r\n    const updateAnswer = event => {\r\n      setAnswer(event.target.value);\r\n    };\r\n      return (\r\n        <>\r\n        <div>\r\n        <input  onChange={updateQuestion} placeholder = \"Enter Question\"/>\r\n        <input  onChange={updateAnswer} placeholder = \"Enter Answer\"/>  \r\n        </div>\r\n        <button onClick={()=> addCard(question,answer)}> Click to add card</button>\r\n        <button >{flashCardDeck.answer}</button>\r\n        </>\r\n      )\r\n  }"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,IAAI,QAAO,eAAe;AACzC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAExC,IAAIC,aAAa,GAAGL,IAAI,CAAC,EAAE,EAAC,EAAE,EAAC,IAAI,EAAC,IAAI,CAAC;AAEzC,SAASM,OAAO,CAACC,CAAC,EAACC,CAAC,EAAC;EACnB,IAAGH,aAAa,CAACI,YAAY,IAAI,IAAI,EAAC;IACpCJ,aAAa,CAACK,QAAQ,GAAGH,CAAC;IAC1BF,aAAa,CAACM,MAAM,GAAGH,CAAC;EAC1B,CAAC,MACG;IACF,IAAII,iBAAiB,GAAGP,aAAa;IACrCA,aAAa,GAAGL,IAAI,CAACO,CAAC,EAACC,CAAC,EAAC,IAAI,EAACI,iBAAiB,CAAC;IAChDA,iBAAiB,CAACC,QAAQ,GAAGR,aAAa;IAC1CA,aAAa,CAACI,YAAY,GAAGG,iBAAiB;EAChD;AACF;AAGA,eAAe,SAASE,IAAI,GAAG;EAAA;EAC3B,MAAM,CAACJ,QAAQ,EAAEK,WAAW,CAAC,GAAGX,QAAQ,CAAC,GAAG,CAAC;EAC7C,MAAM,CAACO,MAAM,EAAEK,SAAS,CAAC,GAAGZ,QAAQ,CAAC,GAAG,CAAC;EAEzC,MAAMa,cAAc,GAAGC,KAAK,IAAI;IAC9BH,WAAW,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EACD,MAAMC,YAAY,GAAGH,KAAK,IAAI;IAC5BF,SAAS,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EACC,oBACE;IAAA,wBACA;MAAA,wBACA;QAAQ,QAAQ,EAAEH,cAAe;QAAC,WAAW,EAAG;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAE,eAClE;QAAQ,QAAQ,EAAEI,YAAa;QAAC,WAAW,EAAG;MAAc;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACxD,eACN;MAAQ,OAAO,EAAE,MAAKf,OAAO,CAACI,QAAQ,EAACC,MAAM,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA4B,eAC3E;MAAA,UAAUN,aAAa,CAACM;IAAM;MAAA;MAAA;MAAA;IAAA,QAAU;EAAA,gBACrC;AAET;AAAC,GApBqBG,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}