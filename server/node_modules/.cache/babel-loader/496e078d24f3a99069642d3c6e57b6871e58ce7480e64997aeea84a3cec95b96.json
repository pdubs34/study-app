{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pwebb\\\\Desktop\\\\StudyApp\\\\study-app\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { Card, Deck } from '../components';\nimport { Link } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet flashCardDeck = Card(null, null, null, null);\nfunction addCard(x, y) {\n  if (flashCardDeck.previousCard == null) {\n    alert(\"ran\");\n    flashCardDeck.question = x;\n    flashCardDeck.answer = y;\n  } else {\n    let flashCardDeckCopy = flashCardDeck;\n    flashCardDeck = Card(x, y, null, flashCardDeckCopy);\n    flashCardDeckCopy.nextCard = flashCardDeck;\n    flashCardDeck.previousCard = flashCardDeckCopy;\n  }\n}\nexport default function Home() {\n  _s();\n  const [question, setQuestion] = useState(\" \");\n  const [answer, setAnswer] = useState(\" \");\n  let [cardText, setText] = useState(\" \");\n  const updateQuestion = event => {\n    setQuestion(event.target.value);\n  };\n  const updateAnswer = event => {\n    setAnswer(event.target.value);\n  };\n  const updateNewCardText = event => {\n    setText(flashCardDeck.question);\n  };\n  const updateText = event => {\n    if (cardText == flashCardDeck.question) {\n      setText(flashCardDeck.answer);\n    } else {\n      setText(flashCardDeck.question);\n    }\n  };\n  const handleLeftClick = type => {\n    let flashCardDeckCopy = flashCardDeck;\n    if (flashCardDeck.previousCard == null) {\n      setText(flashCardDeck.question);\n    } else {\n      flashCardDeck = flashCardDeckCopy.previousCard;\n      flashCardDeck.nextCard = flashCardDeckCopy;\n      updateNewCardText();\n    }\n  };\n  const handleRightClick = type => {\n    let flashCardDeckCopy = flashCardDeck;\n    if (flashCardDeck.nextCard == null) {\n      setText(flashCardDeck.question);\n    } else {\n      flashCardDeck = flashCardDeckCopy.nextCard;\n      flashCardDeck.previousCard = flashCardDeckCopy;\n      updateNewCardText();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: updateQuestion,\n        placeholder: \"Enter Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: updateAnswer,\n        placeholder: \"Enter Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        addCard(question, answer);\n        updateNewCardText();\n      },\n      children: \" Click to add card \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => updateText(),\n      children: cardText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleLeftClick(),\n      children: \"<\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleRightClick(),\n      children: \">\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => flashCardDeck = Card(\"\", \"\", null, null),\n      children: \"Empty List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Home, \"0ksiClEXQ5krT6T27Eh5+lXJA8o=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Card","Deck","Link","React","useState","flashCardDeck","addCard","x","y","previousCard","alert","question","answer","flashCardDeckCopy","nextCard","Home","setQuestion","setAnswer","cardText","setText","updateQuestion","event","target","value","updateAnswer","updateNewCardText","updateText","handleLeftClick","type","handleRightClick"],"sources":["C:/Users/pwebb/Desktop/StudyApp/study-app/src/pages/Home.js"],"sourcesContent":["import { Card, Deck} from '../components'\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState } from 'react';\r\n\r\nlet flashCardDeck = Card(null,null,null,null);\r\n\r\nfunction addCard(x,y){\r\n  if(flashCardDeck.previousCard == null){\r\n    alert(\"ran\");\r\n    flashCardDeck.question = x;\r\n    flashCardDeck.answer = y;\r\n  }\r\n  else{\r\n    let flashCardDeckCopy = flashCardDeck;\r\n    flashCardDeck = Card(x,y,null,flashCardDeckCopy);\r\n    flashCardDeckCopy.nextCard = flashCardDeck;\r\n    flashCardDeck.previousCard = flashCardDeckCopy;\r\n  }\r\n}\r\n\r\n\r\nexport default function Home() {\r\n    const [question, setQuestion] = useState(\" \");\r\n    const [answer, setAnswer] = useState(\" \");\r\n    let [cardText, setText] = useState(\" \");\r\n  \r\n    const updateQuestion = event => {\r\n      setQuestion(event.target.value);\r\n    };\r\n    const updateAnswer = event => {\r\n      setAnswer(event.target.value);\r\n    };\r\n    const updateNewCardText = event => {\r\n      setText(flashCardDeck.question);\r\n    };\r\n    const updateText = event => {\r\n      if(cardText == flashCardDeck.question){\r\n        setText(flashCardDeck.answer);\r\n      }\r\n      else{\r\n        setText(flashCardDeck.question);\r\n      }\r\n    };\r\n    const handleLeftClick = (type) => {\r\n      let flashCardDeckCopy = flashCardDeck;\r\n      if(flashCardDeck.previousCard == null){\r\n        setText(flashCardDeck.question);\r\n      }\r\n      else{\r\n        flashCardDeck = flashCardDeckCopy.previousCard;\r\n        flashCardDeck.nextCard = flashCardDeckCopy;\r\n        updateNewCardText();\r\n      }\r\n    };\r\n    const handleRightClick = (type) => {\r\n      let flashCardDeckCopy = flashCardDeck;\r\n      if(flashCardDeck.nextCard == null){\r\n        setText(flashCardDeck.question);\r\n      }\r\n      else{\r\n        flashCardDeck = flashCardDeckCopy.nextCard;\r\n        flashCardDeck.previousCard = flashCardDeckCopy;\r\n        updateNewCardText()\r\n      }\r\n\r\n    };\r\n\r\n      return (\r\n        <>\r\n        <div>\r\n        <input  onChange={updateQuestion} placeholder = \"Enter Question\"/>\r\n        <input  onChange={updateAnswer} placeholder = \"Enter Answer\"/>  \r\n        </div>\r\n        <button onClick={()=> {addCard(question,answer); updateNewCardText()}}> Click to add card </button>\r\n        <br />\r\n        <div onClick={()=> updateText()}>{cardText}</div>\r\n        <button onClick={() => handleLeftClick()}>{\"<\"}</button>\r\n        <button onClick={() => handleRightClick()}>{\">\"}</button>\r\n        <button onClick={() => flashCardDeck = Card(\"\",\"\",null,null)}>{\"Empty List\"}</button>\r\n        </>\r\n      )\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}