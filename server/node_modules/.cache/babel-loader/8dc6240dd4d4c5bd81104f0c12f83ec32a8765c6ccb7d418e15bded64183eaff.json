{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pwebb\\\\Desktop\\\\StudyApp\\\\study-app\\\\src\\\\pages\\\\Flashcard.js\",\n  _s = $RefreshSig$();\nimport { Card, Deck } from '../components';\nimport { Link } from \"react-router-dom\";\nimport React, { useState, useRef } from 'react';\nimport '../styles/home.css';\nimport '../arrow-left.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [question, setQuestion] = useState(\" \");\n  const [answer, setAnswer] = useState(\" \");\n  let [cardText, setText] = useState(\"No Cards Yet! Add a card to begin!\");\n  let [cardAnswer, setAnswerText] = useState(\"No Cards Yet! Add a card to begin!\");\n  let [flashCards, setFlashCards] = useState([]);\n  const index = useRef(-1);\n  function addCard(x, y) {\n    index.curent = index.current++;\n    flashCards[index.current] = Card(x, y);\n    addToArr();\n  }\n  const updateQuestion = event => {\n    setQuestion(event.target.value);\n  };\n  const updateAnswer = event => {\n    setAnswer(event.target.value);\n  };\n  const updateNewCardText = event => {\n    setText(flashCards[index.current].question);\n    setAnswerText(flashCards[index.current].answer);\n  };\n  const updateText = event => {\n    if (cardText == flashCards[index.current].question) {\n      setText(flashCards[index.current].answer);\n    } else {\n      setText(flashCards[index.current].question);\n    }\n  };\n  const handleLeftClick = type => {\n    if (index.current == 0) {\n      return;\n    } else {\n      index.current = index.current - 1;\n      updateNewCardText();\n    }\n  };\n  const handleRightClick = type => {\n    if (flashCards[index.current + 1] == null) {\n      return;\n    } else {\n      index.current = index.current + 1;\n      updateNewCardText();\n    }\n  };\n  const handleClear = type => {\n    flashCards = [];\n    index.current = -1;\n    setText(\"No cards\");\n    setAnswerText(\"No cards\");\n  };\n  const addToArr = () => {\n    let cpy = [...flashCards];\n    cpy.push();\n    setFlashCards(cpy);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: \"@import url('https://fonts.googleapis.com/css2?family=Raleway&display=swap');\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: updateQuestion,\n        placeholder: \"Enter Question\",\n        class: \"QuestionButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: updateAnswer,\n        placeholder: \"Enter Answer\",\n        class: \"AnswerButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        addCard(question, answer);\n        updateNewCardText();\n        document.querySelector('.QuestionButton').value = '';\n        document.querySelector('.AnswerButton').value = '';\n      },\n      children: \" Click to add card \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"DisplayedCard\",\n      placeholder: \"Need Card\",\n      onClick: () => updateText(),\n      children: cardText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"LeftButton arrow left\",\n      onClick: () => handleLeftClick(),\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse1.mm.bing.net%2Fth%3Fid%3DOIP.wEFB1r5Ftk7JfFPMFMBhhgHaHa%26pid%3DApi&f=1&ipt=1dfd1d8b589f3dfacb7226a5a8fff2d5491914253dddeeb231e6f49b55699795&ipo=images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 84\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"RightButton arrow right\",\n      onClick: () => handleRightClick()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"EmptyButton\",\n      onClick: () => handleClear(),\n      children: \"Empty List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), flashCards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"listed-questions\",\n        children: card.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"listed-answers\",\n        children: card.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }, this)]\n    }, card.question, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n}\n_s(Home, \"avgsiKVIsqsYgF8HApWXY5lkFCw=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Card","Deck","Link","React","useState","useRef","Home","question","setQuestion","answer","setAnswer","cardText","setText","cardAnswer","setAnswerText","flashCards","setFlashCards","index","addCard","x","y","curent","current","addToArr","updateQuestion","event","target","value","updateAnswer","updateNewCardText","updateText","handleLeftClick","type","handleRightClick","handleClear","cpy","push","document","querySelector","map","card"],"sources":["C:/Users/pwebb/Desktop/StudyApp/study-app/src/pages/Flashcard.js"],"sourcesContent":["import { Card, Deck} from '../components'\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useRef } from 'react';\r\nimport '../styles/home.css';\r\nimport '../arrow-left.png';\r\n\r\nexport default function Home() {\r\n  \r\n    const [question, setQuestion] = useState(\" \");\r\n    const [answer, setAnswer] = useState(\" \");\r\n    let [cardText, setText] = useState(\"No Cards Yet! Add a card to begin!\");\r\n    let [cardAnswer, setAnswerText] = useState(\"No Cards Yet! Add a card to begin!\");\r\n    let [flashCards, setFlashCards] = useState([]);  \r\n    \r\n    const index = useRef(-1);\r\n\r\n    function addCard(x,y){\r\n      index.curent = index.current++;\r\n      flashCards[index.current] = Card(x,y);\r\n      addToArr();\r\n    }\r\n\r\n    const updateQuestion = event => {\r\n      setQuestion(event.target.value);\r\n    };\r\n    const updateAnswer = event => {\r\n      setAnswer(event.target.value);\r\n    };\r\n    const updateNewCardText = event => {\r\n      setText(flashCards[index.current].question);\r\n      setAnswerText(flashCards[index.current].answer)\r\n    };\r\n    const updateText = event => {\r\n      if(cardText == flashCards[index.current].question){\r\n        setText(flashCards[index.current].answer);\r\n      }\r\n      else{\r\n        setText(flashCards[index.current].question);\r\n      }\r\n    };\r\n    const handleLeftClick = (type) => {\r\n      if(index.current == 0){\r\n        return;\r\n      }\r\n      else{\r\n        index.current = index.current - 1;\r\n        updateNewCardText();\r\n      }\r\n    };\r\n    const handleRightClick = (type) => {\r\n      if(flashCards[index.current + 1] == null){\r\n        return;\r\n      }\r\n      else{\r\n        index.current = index.current + 1;\r\n        updateNewCardText()\r\n      }\r\n\r\n    };\r\n    const handleClear = (type) => {\r\n      flashCards = [];\r\n      index.current = -1;\r\n      setText(\"No cards\");\r\n      setAnswerText(\"No cards\");\r\n    }\r\n\r\n    const addToArr = () => {\r\n      let cpy = [...flashCards];\r\n      cpy.push()\r\n      setFlashCards(cpy);\r\n    }\r\n\r\n      return (\r\n        <>\r\n        <style>\r\n        @import url('https://fonts.googleapis.com/css2?family=Raleway&display=swap');\r\n        </style>\r\n        <div>\r\n        <input  onChange={updateQuestion} placeholder = \"Enter Question\" class='QuestionButton'/>\r\n        <input  onChange={updateAnswer} placeholder = \"Enter Answer\" class='AnswerButton'/>  \r\n        </div>\r\n        <button onClick={()=> {addCard(question,answer); updateNewCardText();document.querySelector('.QuestionButton').value = '';document.querySelector('.AnswerButton').value = '';}}> Click to add card </button>\r\n        <br />\r\n        <button class = \"DisplayedCard\" placeholder='Need Card' onClick={()=> updateText()}>{cardText}</button>\r\n        <button class = \"LeftButton arrow left\" onClick={() => handleLeftClick()}> <img src = \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse1.mm.bing.net%2Fth%3Fid%3DOIP.wEFB1r5Ftk7JfFPMFMBhhgHaHa%26pid%3DApi&f=1&ipt=1dfd1d8b589f3dfacb7226a5a8fff2d5491914253dddeeb231e6f49b55699795&ipo=images\"/>\r\n        </button>\r\n        <button class = \"RightButton arrow right\"onClick={() => handleRightClick()}></button>\r\n        <button class = \"EmptyButton\"onClick={() => handleClear()}>{\"Empty List\"}</button>\r\n        {flashCards.map((card) => (\r\n          <div className=\"card-container\" key={card.question}>\r\n              <h1 className='listed-questions'>{card.question}</h1>\r\n              <h2 className='listed-answers'>{card.answer}</h2>\r\n          </div> \r\n        ))}\r\n        </>\r\n      )\r\n  }"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,IAAI,QAAO,eAAe;AACzC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAO,oBAAoB;AAC3B,OAAO,mBAAmB;AAAC;AAAA;AAE3B,eAAe,SAASC,IAAI,GAAG;EAAA;EAE3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,GAAG,CAAC;EAC7C,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,GAAG,CAAC;EACzC,IAAI,CAACO,QAAQ,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,oCAAoC,CAAC;EACxE,IAAI,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,oCAAoC,CAAC;EAChF,IAAI,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMa,KAAK,GAAGZ,MAAM,CAAC,CAAC,CAAC,CAAC;EAExB,SAASa,OAAO,CAACC,CAAC,EAACC,CAAC,EAAC;IACnBH,KAAK,CAACI,MAAM,GAAGJ,KAAK,CAACK,OAAO,EAAE;IAC9BP,UAAU,CAACE,KAAK,CAACK,OAAO,CAAC,GAAGtB,IAAI,CAACmB,CAAC,EAACC,CAAC,CAAC;IACrCG,QAAQ,EAAE;EACZ;EAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;IAC9BjB,WAAW,CAACiB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EACD,MAAMC,YAAY,GAAGH,KAAK,IAAI;IAC5Bf,SAAS,CAACe,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EACD,MAAME,iBAAiB,GAAGJ,KAAK,IAAI;IACjCb,OAAO,CAACG,UAAU,CAACE,KAAK,CAACK,OAAO,CAAC,CAACf,QAAQ,CAAC;IAC3CO,aAAa,CAACC,UAAU,CAACE,KAAK,CAACK,OAAO,CAAC,CAACb,MAAM,CAAC;EACjD,CAAC;EACD,MAAMqB,UAAU,GAAGL,KAAK,IAAI;IAC1B,IAAGd,QAAQ,IAAII,UAAU,CAACE,KAAK,CAACK,OAAO,CAAC,CAACf,QAAQ,EAAC;MAChDK,OAAO,CAACG,UAAU,CAACE,KAAK,CAACK,OAAO,CAAC,CAACb,MAAM,CAAC;IAC3C,CAAC,MACG;MACFG,OAAO,CAACG,UAAU,CAACE,KAAK,CAACK,OAAO,CAAC,CAACf,QAAQ,CAAC;IAC7C;EACF,CAAC;EACD,MAAMwB,eAAe,GAAIC,IAAI,IAAK;IAChC,IAAGf,KAAK,CAACK,OAAO,IAAI,CAAC,EAAC;MACpB;IACF,CAAC,MACG;MACFL,KAAK,CAACK,OAAO,GAAGL,KAAK,CAACK,OAAO,GAAG,CAAC;MACjCO,iBAAiB,EAAE;IACrB;EACF,CAAC;EACD,MAAMI,gBAAgB,GAAID,IAAI,IAAK;IACjC,IAAGjB,UAAU,CAACE,KAAK,CAACK,OAAO,GAAG,CAAC,CAAC,IAAI,IAAI,EAAC;MACvC;IACF,CAAC,MACG;MACFL,KAAK,CAACK,OAAO,GAAGL,KAAK,CAACK,OAAO,GAAG,CAAC;MACjCO,iBAAiB,EAAE;IACrB;EAEF,CAAC;EACD,MAAMK,WAAW,GAAIF,IAAI,IAAK;IAC5BjB,UAAU,GAAG,EAAE;IACfE,KAAK,CAACK,OAAO,GAAG,CAAC,CAAC;IAClBV,OAAO,CAAC,UAAU,CAAC;IACnBE,aAAa,CAAC,UAAU,CAAC;EAC3B,CAAC;EAED,MAAMS,QAAQ,GAAG,MAAM;IACrB,IAAIY,GAAG,GAAG,CAAC,GAAGpB,UAAU,CAAC;IACzBoB,GAAG,CAACC,IAAI,EAAE;IACVpB,aAAa,CAACmB,GAAG,CAAC;EACpB,CAAC;EAEC,oBACE;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEQ,eACR;MAAA,wBACA;QAAQ,QAAQ,EAAEX,cAAe;QAAC,WAAW,EAAG,gBAAgB;QAAC,KAAK,EAAC;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAE,eACzF;QAAQ,QAAQ,EAAEI,YAAa;QAAC,WAAW,EAAG,cAAc;QAAC,KAAK,EAAC;MAAc;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7E,eACN;MAAQ,OAAO,EAAE,MAAK;QAACV,OAAO,CAACX,QAAQ,EAACE,MAAM,CAAC;QAAEoB,iBAAiB,EAAE;QAACQ,QAAQ,CAACC,aAAa,CAAC,iBAAiB,CAAC,CAACX,KAAK,GAAG,EAAE;QAACU,QAAQ,CAACC,aAAa,CAAC,eAAe,CAAC,CAACX,KAAK,GAAG,EAAE;MAAC,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA6B,eAC5M;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAQ,KAAK,EAAG,eAAe;MAAC,WAAW,EAAC,WAAW;MAAC,OAAO,EAAE,MAAKG,UAAU,EAAG;MAAA,UAAEnB;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAU,eACvG;MAAQ,KAAK,EAAG,uBAAuB;MAAC,OAAO,EAAE,MAAMoB,eAAe,EAAG;MAAA,6BAAE;QAAK,GAAG,EAAG;MAAyN;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACxS,eACT;MAAQ,KAAK,EAAG,yBAAyB;MAAA,OAAO,EAAE,MAAME,gBAAgB;IAAG;MAAA;MAAA;MAAA;IAAA,QAAU,eACrF;MAAQ,KAAK,EAAG,aAAa;MAAA,OAAO,EAAE,MAAMC,WAAW,EAAG;MAAA,UAAE;IAAY;MAAA;MAAA;MAAA;IAAA,QAAU,EACjFnB,UAAU,CAACwB,GAAG,CAAEC,IAAI,iBACnB;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC3B;QAAI,SAAS,EAAC,kBAAkB;QAAA,UAAEA,IAAI,CAACjC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAM,eACrD;QAAI,SAAS,EAAC,gBAAgB;QAAA,UAAEiC,IAAI,CAAC/B;MAAM;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA,GAFhB+B,IAAI,CAACjC,QAAQ;MAAA;MAAA;MAAA;IAAA,QAInD,CAAC;EAAA,gBACC;AAET;AAAC,GA1FqBD,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}