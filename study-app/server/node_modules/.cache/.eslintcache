[{"C:\\Users\\pwebb\\Desktop\\StudyApp\\study-app\\src\\index.js":"1","C:\\Users\\pwebb\\Desktop\\StudyApp\\study-app\\src\\App.js":"2","C:\\Users\\pwebb\\Desktop\\StudyApp\\study-app\\src\\client\\pages\\Flashcard.js":"3","C:\\Users\\pwebb\\Desktop\\StudyApp\\study-app\\src\\client\\pages\\BoobPage.js":"4","C:\\Users\\pwebb\\Desktop\\StudyApp\\study-app\\src\\client\\components.js":"5","C:\\Users\\pwebb\\Desktop\\StudyApp\\study-app\\src\\Layout.js":"6"},{"size":422,"mtime":1675800057364,"results":"7","hashOfConfig":"8"},{"size":592,"mtime":1675800098653,"results":"9","hashOfConfig":"8"},{"size":7619,"mtime":1675800915308,"results":"10","hashOfConfig":"8"},{"size":228,"mtime":1675441543882,"results":"11","hashOfConfig":"8"},{"size":93,"mtime":1674693657104,"results":"12","hashOfConfig":"8"},{"size":719,"mtime":1675800192226,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w5j00a",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"C:\\Users\\pwebb\\Desktop\\StudyApp\\study-app\\src\\index.js",[],[],"C:\\Users\\pwebb\\Desktop\\StudyApp\\study-app\\src\\App.js",["36","37"],[],"\nimport './App.css';\nimport React, { useState } from 'react';\n\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Flashcard from './client/pages/Flashcard';\nimport BoobPage from './client/pages/BoobPage';\nimport Layout from './Layout';\n\n\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={<Layout />}>\n        <Route index element={<Flashcard />} /> \n        <Route exact path=\"boobPage\" element={<BoobPage />} />\n      </Route>\n    </Routes>\n  </BrowserRouter>\n  );\n}\n  \n\n","C:\\Users\\pwebb\\Desktop\\StudyApp\\study-app\\src\\client\\pages\\Flashcard.js",["38","39","40","41","42","43","44","45","46"],[],"import { Card, Deck} from '../components'\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useRef } from 'react';\r\nimport '../styles/home.css';\r\nimport '../arrow-left.png';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default function Home() {\r\n   \r\n    const [question, setQuestion] = useState(\" \");\r\n    const [answer, setAnswer] = useState(\" \");\r\n    const [listedQuestion, setListedQuestion] = useState(\" \");\r\n    const [listedAnswer, setListedAnswer] = useState(\" \");\r\n    let [cardText, setText] = useState(\"No Cards Yet! Add a card to begin!\");\r\n    let [cardAnswer, setAnswerText] = useState(\"No Cards Yet! Add a card to begin!\");\r\n    let [flashCards, setFlashCards] = useState([]);  \r\n    const [flip, setFlip] = useState(0);\r\n    let tempBool = useRef(0);\r\n    let tempVar = useRef(\"\");\r\n    let index = useRef(-1);\r\n\r\n    \r\n    function addCard(x,y){\r\n      index.current = index.current + 1;\r\n      const c = Card(x,y);\r\n      flashCards.push(c);\r\n      addToArr(c);\r\n      updateNewCardText();\r\n    }\r\n    const updateListedQuestion = event => {\r\n      setListedQuestion(event.target.value);\r\n    };\r\n    const updateListedAnswer = event => {\r\n      setListedAnswer(event.target.value);\r\n    };\r\n    const updateQuestion = event => {\r\n      setQuestion(event.target.value);\r\n    };\r\n    const updateAnswer = event => {\r\n      setAnswer(event.target.value);\r\n    };\r\n    const updateNewCardText = event => {\r\n      setText(flashCards[index.current].question);\r\n      setAnswerText(flashCards[index.current].answer)\r\n    };\r\n    const updateText = event => {\r\n      if(cardText == flashCards[index.current].question){\r\n        setText(flashCards[index.current].answer);\r\n      }\r\n      else{\r\n        setText(flashCards[index.current].question);\r\n      }\r\n    };\r\n\r\n    const handleLeftClick = (type) => {\r\n      if(index.current == 0){\r\n        return;\r\n      }\r\n      else{\r\n        index.current = index.current - 1;\r\n        updateNewCardText();\r\n      }\r\n    };\r\n\r\n    const handleRightClick = (type) => {\r\n      if(flashCards[index.current + 1] == null){\r\n        return;\r\n      }\r\n      else{\r\n        index.current = index.current + 1;\r\n        updateNewCardText()\r\n      }\r\n    };\r\n\r\n    const handleClear = (type) => {\r\n      flashCards = [];\r\n      index.current = -1;\r\n      setText(\"No cards\");\r\n      setAnswerText(\"No cards\");\r\n      setFlashCards(flashCards);\r\n    }\r\n    function handleCardClick(){\r\n      if(cardText == flashCards[index.current].question){\r\n        tempVar.current = (flashCards[index.current].answer);\r\n      }\r\n      else{\r\n        tempVar.current = (flashCards[index.current].question);\r\n      }\r\n      updateText();\r\n      setFlip(1);\r\n      setText(\"\");\r\n    }\r\n    function handleAddClick(){\r\n      addCard(question,answer);\r\n      updateNewCardText();\r\n      document.querySelector('.QuestionButton').value = '';\r\n      document.querySelector('.AnswerButton').value = '';\r\n    }\r\n\r\n    const addToArr = (c) => {\r\n      let cpy = [...flashCards];\r\n      // cpy.push(c)\r\n      setFlashCards(cpy);\r\n    }\r\n\r\n    function editText(question,answer){\r\n      for(var i = 0; i <  flashCards.length; i++){\r\n        if(flashCards[i].question === question && flashCards[i].answer === answer){\r\n          changeHandler(`listedQ${i}`,i,question);\r\n          changeHandler(`listedA${i}`,i,answer);\r\n        }\r\n      }\r\n      let cpy = [...flashCards];\r\n      setFlashCards(cpy);\r\n    }\r\n\r\n    function changeHandler(qOrA,index,previousText){\r\n      var listed = document.getElementById(qOrA);\r\n      var input = document.createElement(\"input\");\r\n      input.innerHTML = \"enter new text\";\r\n      if(qOrA === `listedQ${index}`){\r\n        input.onchange = updateListedQuestion;\r\n        input.placeholder = \"Edit Question\";\r\n        input.className = \"changeInputQuestion\";\r\n        input.value = previousText;\r\n        input.id = qOrA;\r\n        setListedQuestion(previousText);\r\n      }\r\n      else{\r\n        input.onchange = updateListedAnswer;\r\n        input.placeholder = \"Edit Answer\";\r\n        input.className = \"changeInputAnswer\";\r\n        input.value = previousText;\r\n        input.id = qOrA;\r\n        setListedAnswer(previousText);\r\n       \r\n      }\r\n      \r\n      listed.parentNode.replaceChild(input, listed);\r\n    }\r\n    function gottenIndex(question){\r\n      let number = -1;\r\n      for(var i = 0; i <  flashCards.length; i++){\r\n        if(flashCards[i].question === question ){\r\n          number = i;\r\n        }\r\n      }\r\n      return number;\r\n    }\r\n    function functionHandleEditRevert(type,indexF,text){\r\n      var listed;\r\n      var input;\r\n\r\n      if(String(type) ==\"question\"){\r\n        listed = document.getElementById(`listedQ${indexF}`);\r\n        input = document.createElement(\"h1\");\r\n        input.innerHTML = text;\r\n        input.id = `listedQ${indexF}`;\r\n        flashCards[indexF].question = text;\r\n        setText(text);\r\n        \r\n      }\r\n      else{\r\n        listed = document.getElementById(`listedA${indexF}`);\r\n        input = document.createElement(\"h2\");\r\n        input.innerHTML = text;\r\n        input.id = `listedA${indexF}`;\r\n        flashCards[indexF].answer = text;\r\n        setAnswerText(text);\r\n      }\r\n      listed.parentNode.replaceChild(input, listed);\r\n    }\r\n\r\n    function handleEditMode(question,answer,indexF){\r\n      if(tempBool.current == 1){\r\n        functionHandleEditRevert(\"question\",indexF,listedQuestion);\r\n        functionHandleEditRevert(\"answer\",indexF,listedAnswer);\r\n        tempBool.current = 0;\r\n       \r\n      }\r\n      else{\r\n        editText(question,answer,\"editButton\");\r\n        tempBool.current = 1;\r\n      }\r\n    }\r\n    const fetchAllCards = async () => {\r\n      try {\r\n        const res = await axios.get(\"http://localhost:9000/cards\");\r\n        console.log(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    \r\n    \r\n\r\n      return (\r\n        <>\r\n        <style>\r\n        @import url('https://fonts.googleapis.com/css2?family=Raleway&display=swap');\r\n        </style>\r\n        <div>\r\n        <input  onChange={updateQuestion} placeholder = \"Enter Question\" class='QuestionButton'/>\r\n        <input  onChange={updateAnswer} placeholder = \"Enter Answer\" class='AnswerButton'/>  \r\n        </div>\r\n        <button class = 'addButton' onClick={()=> fetchAllCards()}> Click to add card </button>\r\n        {/* <button class = 'addButton' onClick={()=> handleAddClick()}> Click to add card </button> */}\r\n        <br />\r\n        <h1 className='cardIndex'>{index.current + 1}/{flashCards.length}</h1>\r\n        <button class = \"DisplayedCard\" placeholder='Need Card' \r\n        onClick={()=> handleCardClick()}\r\n        onAnimationEnd={() => {setFlip(0); setText(tempVar.current);}}\r\n        flip={flip}>\r\n        {cardText}\r\n        </button>\r\n        <button class = \"LeftButton\" onClick={() => handleLeftClick()}> {\"<-\"}\r\n        </button>\r\n        <button class = \"RightButton\"onClick={() => handleRightClick()}>{\"->\"}</button>\r\n        <button class = \"EmptyButton\"onClick={() => handleClear()}>{\"Empty List\"}</button>\r\n        {flashCards.map((card, i) => (\r\n          <div className=\"card-container\" key={card.question}>\r\n              <h1 id = {`listedQ${gottenIndex(card.question)}`}  className='listed-questions'>{card.question}</h1>\r\n              <h2 id = {`listedA${gottenIndex(card.question)}`}>{card.answer}</h2>\r\n              <button id = \"editButton\" className='editButton' onClick={() => {handleEditMode(card.question,card.answer,gottenIndex(card.question))}}>{\"Edit\"}</button>\r\n          </div> \r\n        ))}\r\n        \r\n        </> \r\n      )\r\n  }","C:\\Users\\pwebb\\Desktop\\StudyApp\\study-app\\src\\client\\pages\\BoobPage.js",["47","48"],[],"import React from \"react\";\r\n\r\nimport Boobs from '../Boobs.png';\r\nimport flashCards from '../pages/Flashcard';\r\n\r\n\r\n  \r\nexport default function boobPage(){\r\n      return (\r\n        <img src = {Boobs}></img>\r\n      );\r\n}\r\n  \r\n\r\n\r\n","C:\\Users\\pwebb\\Desktop\\StudyApp\\study-app\\src\\client\\components.js",[],[],"C:\\Users\\pwebb\\Desktop\\StudyApp\\study-app\\src\\Layout.js",["49","50"],[],"import { Outlet, Link } from \"react-router-dom\";\r\nimport \"./client/styles/layout.css\";\r\n\r\nfunction noUnderline() {\r\n  var el = document.getElementById('homeBanner');\r\n  el.style.textDecoration = \"none\";\r\n}\r\nfunction noUnderline2() {\r\n  var el = document.getElementById('boobPageBanner');\r\n  el.style.textDecoration = \"none\";\r\n}\r\nconst Layout = () => {\r\n  return (\r\n    <>\r\n      <nav>\r\n        <div className=\"banner\">\r\n          <h2 className=\"bannerHome\"><Link to=\"/\" className=\"bannerLink1\" >Flashcard</Link></h2>\r\n          <h2 className=\"bannerBoobPage\"><Link to=\"/boobPage\" className=\"bannerLink2\">Boob Page</Link></h2>\r\n        </div>\r\n      </nav>\r\n\r\n      <Outlet />\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Layout;",{"ruleId":"51","severity":1,"message":"52","line":3,"column":17,"nodeType":"53","messageId":"54","endLine":3,"endColumn":25},{"ruleId":"51","severity":1,"message":"55","line":5,"column":8,"nodeType":"53","messageId":"54","endLine":5,"endColumn":16},{"ruleId":"51","severity":1,"message":"56","line":1,"column":16,"nodeType":"53","messageId":"54","endLine":1,"endColumn":20},{"ruleId":"51","severity":1,"message":"57","line":2,"column":10,"nodeType":"53","messageId":"54","endLine":2,"endColumn":14},{"ruleId":"51","severity":1,"message":"58","line":17,"column":10,"nodeType":"53","messageId":"54","endLine":17,"endColumn":20},{"ruleId":"59","severity":1,"message":"60","line":49,"column":19,"nodeType":"61","messageId":"62","endLine":49,"endColumn":21},{"ruleId":"59","severity":1,"message":"60","line":58,"column":24,"nodeType":"61","messageId":"62","endLine":58,"endColumn":26},{"ruleId":"59","severity":1,"message":"60","line":85,"column":19,"nodeType":"61","messageId":"62","endLine":85,"endColumn":21},{"ruleId":"51","severity":1,"message":"63","line":95,"column":14,"nodeType":"53","messageId":"54","endLine":95,"endColumn":28},{"ruleId":"59","severity":1,"message":"60","line":156,"column":23,"nodeType":"61","messageId":"62","endLine":156,"endColumn":25},{"ruleId":"59","severity":1,"message":"60","line":177,"column":27,"nodeType":"61","messageId":"62","endLine":177,"endColumn":29},{"ruleId":"51","severity":1,"message":"64","line":4,"column":8,"nodeType":"53","messageId":"54","endLine":4,"endColumn":18},{"ruleId":"65","severity":1,"message":"66","line":10,"column":9,"nodeType":"67","endLine":10,"endColumn":28},{"ruleId":"51","severity":1,"message":"68","line":4,"column":10,"nodeType":"53","messageId":"54","endLine":4,"endColumn":21},{"ruleId":"51","severity":1,"message":"69","line":8,"column":10,"nodeType":"53","messageId":"54","endLine":8,"endColumn":22},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'Deck' is defined but never used.","'Link' is defined but never used.","'cardAnswer' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'handleAddClick' is defined but never used.","'flashCards' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'noUnderline' is defined but never used.","'noUnderline2' is defined but never used."]