{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pwebb\\\\Desktop\\\\StudyApp\\\\study-app\\\\src\\\\pages\\\\Flashcard.js\",\n  _s = $RefreshSig$();\nimport { Card, Deck } from '../components';\nimport { Link } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport '../styles/home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  let flashCardDeck = Card(null, null);\n  let index = -1;\n  const [question, setQuestion] = useState(\" \");\n  const [answer, setAnswer] = useState(\" \");\n  let [cardText, setText] = useState(\"Need Card\");\n  let [cardAnswer, setAnswerText] = useState(\"Need Answer\");\n  let [flashCards, setFlashCards] = useState([]);\n  function addCard(x, y) {\n    index++;\n    flashCardDeck[index] = Card(x, y);\n    addToArr();\n  }\n  const updateQuestion = event => {\n    setQuestion(event.target.value);\n  };\n  const updateAnswer = event => {\n    setAnswer(event.target.value);\n  };\n  const updateNewCardText = event => {\n    setText(flashCardDeck[index].question);\n    setAnswerText(flashCardDeck[index].answer);\n  };\n  const updateText = event => {\n    if (cardText == flashCardDeck[index].question) {\n      setText(flashCardDeck[index].answer);\n    } else {\n      setText(flashCardDeck[index].question);\n    }\n  };\n  const handleLeftClick = type => {\n    if (index == 0) {\n      return;\n    } else {\n      index = index - 1;\n      updateNewCardText();\n    }\n  };\n  const handleRightClick = type => {\n    if (flashCardDeck[index + 1] == null) {\n      return;\n    } else {\n      index = index + 1;\n      updateNewCardText();\n    }\n  };\n  const handleClear = type => {\n    flashCardDeck = [];\n    index = -1;\n    setText(\"No cards\");\n    setAnswerText(\"No cards\");\n  };\n  const addToArr = () => {\n    let cpy = [...flashCards];\n    setFlashCards(cpy);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: updateQuestion,\n        placeholder: \"Enter Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: updateAnswer,\n        placeholder: \"Enter Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        addCard(question, answer);\n        updateNewCardText();\n      },\n      children: \" Click to add card \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"questionButton\",\n      placeholder: \"Need Card\",\n      onClick: () => updateText(),\n      children: cardText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleLeftClick(),\n      children: \"<\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleRightClick(),\n      children: \">\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClear(),\n      children: \"Empty List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), flashCards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: card.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: card.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, card.question, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n}\n_s(Home, \"R3nc912CjxEKClIifwUbVW1ICDU=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Card","Deck","Link","React","useState","Home","flashCardDeck","index","question","setQuestion","answer","setAnswer","cardText","setText","cardAnswer","setAnswerText","flashCards","setFlashCards","addCard","x","y","addToArr","updateQuestion","event","target","value","updateAnswer","updateNewCardText","updateText","handleLeftClick","type","handleRightClick","handleClear","cpy","map","card"],"sources":["C:/Users/pwebb/Desktop/StudyApp/study-app/src/pages/Flashcard.js"],"sourcesContent":["import { Card, Deck} from '../components'\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState } from 'react';\r\nimport '../styles/home.css';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Home() {\r\n    let flashCardDeck = Card(null,null);\r\n    let index = -1;\r\n    const [question, setQuestion] = useState(\" \");\r\n    const [answer, setAnswer] = useState(\" \");\r\n    let [cardText, setText] = useState(\"Need Card\");\r\n    let [cardAnswer, setAnswerText] = useState(\"Need Answer\");\r\n    let [flashCards, setFlashCards] = useState([]);\r\n\r\n    function addCard(x,y){\r\n      index++;\r\n      flashCardDeck[index] = Card(x,y);\r\n      addToArr();\r\n    }\r\n\r\n    const updateQuestion = event => {\r\n      setQuestion(event.target.value);\r\n    };\r\n    const updateAnswer = event => {\r\n      setAnswer(event.target.value);\r\n    };\r\n    const updateNewCardText = event => {\r\n      setText(flashCardDeck[index].question);\r\n      setAnswerText(flashCardDeck[index].answer)\r\n    };\r\n    const updateText = event => {\r\n      if(cardText == flashCardDeck[index].question){\r\n        setText(flashCardDeck[index].answer);\r\n      }\r\n      else{\r\n        setText(flashCardDeck[index].question);\r\n      }\r\n    };\r\n    const handleLeftClick = (type) => {\r\n      if(index == 0){\r\n        return;\r\n      }\r\n      else{\r\n        index = index - 1;\r\n        updateNewCardText();\r\n      }\r\n    };\r\n    const handleRightClick = (type) => {\r\n      if(flashCardDeck[index + 1] == null){\r\n        return;\r\n      }\r\n      else{\r\n        index = index + 1;\r\n        updateNewCardText()\r\n      }\r\n\r\n    };\r\n    const handleClear = (type) => {\r\n      flashCardDeck = [];\r\n      index = -1;\r\n      setText(\"No cards\");\r\n      setAnswerText(\"No cards\");\r\n    }\r\n\r\n    const addToArr = () => {\r\n      let cpy = [...flashCards];\r\n      setFlashCards(cpy);\r\n    }\r\n\r\n      return (\r\n        <>\r\n        <div>\r\n        <input  onChange={updateQuestion} placeholder = \"Enter Question\"/>\r\n        <input  onChange={updateAnswer} placeholder = \"Enter Answer\"/>  \r\n        </div>\r\n        <button onClick={()=> {addCard(question,answer); updateNewCardText()}}> Click to add card </button>\r\n        <br />\r\n        <button class = \"questionButton\" placeholder='Need Card' onClick={()=> updateText()}>{cardText}</button>\r\n        <button onClick={() => handleLeftClick()}>{\"<\"}</button>\r\n        <button onClick={() => handleRightClick()}>{\">\"}</button>\r\n        <button onClick={() => handleClear()}>{\"Empty List\"}</button>\r\n        {flashCards.map((card) => (\r\n          <div className=\"card-container\" key={card.question}>\r\n            <h1>{card.question}</h1>\r\n            <h2>{card.answer}</h2>\r\n          </div>\r\n        ))}\r\n        </>\r\n      )\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}